package in.gaurav.serviceImpl;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Iterator;
import java.util.List;

import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Example;
import org.springframework.stereotype.Service;

import in.gaurav.entity.CitizenPlan;
import in.gaurav.repository.CitizenPlanRepository;
import in.gaurav.request.SearchRequest;
import in.gaurav.service.ReportService;

@Service
public class ReportServiceImpl implements ReportService{

	@Autowired
	private CitizenPlanRepository citizenPlanRepository;
	
	@Override
	public List<String> getPlanNames() {
		return citizenPlanRepository.getPlanNames();
	}

	@Override
	public List<String> getPlanStatus() {
		return citizenPlanRepository.getPlanStatus();
	}

	@Override
	public List<CitizenPlan> search(SearchRequest request) {
		CitizenPlan entity=new CitizenPlan();
		if(null!=request.getPlanName() && !"".equals(request.getPlanName())) {
			entity.setPlanName(request.getPlanName());
		}
		if(null!=request.getPlanStatus() && !"".equals(request.getPlanStatus())) {
			entity.setPlanStatus(request.getPlanStatus());
		}
		if(null!=request.getGender() && !"".equals(request.getGender())) {
			entity.setGender(request.getGender());
		}
		if(null!=request.getPlanStartDate() && !"".equals(request.getPlanStartDate())) {
			String date = request.getPlanStartDate();
			 DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
			  //convert String to LocalDate
			  LocalDate localDate = LocalDate.parse(date, formatter);
			entity.setPlanStartDate(localDate);
		}
		if(null!=request.getPlanEndDate() && !"".equals(request.getPlanEndDate())) {
			String date = request.getPlanEndDate();
			 DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
			  //convert String to LocalDate
			  LocalDate localDate = LocalDate.parse(date, formatter);
			entity.setPlanEndDate(localDate);
		}
		
		return citizenPlanRepository.findAll(Example.of(entity));
	}

	@Override
	public boolean exportExcel() throws Exception {
		
		Workbook workbook=new HSSFWorkbook();
		Sheet sheet = workbook.createSheet("plans-data");
		Row headerRow = sheet.createRow(0);
		headerRow.createCell(0).setCellValue("ID");
		headerRow.createCell(1).setCellValue("Citizen Name");
		headerRow.createCell(2).setCellValue("Plan Name");
		headerRow.createCell(3).setCellValue("Plan Status");
		headerRow.createCell(4).setCellValue("Plane Start Date");
		headerRow.createCell(5).setCellValue("Plane End Date");
		headerRow.createCell(6).setCellValue("Benefit Amt");
		
		List<CitizenPlan> records = citizenPlanRepository.findAll();
		
		int dataRowIndex=1;
		
		for(CitizenPlan plan:records) {
			Row dataRow = sheet.createRow(dataRowIndex);
			dataRow.createCell(0).setCellValue(plan.getCitizenId());
			dataRow.createCell(1).setCellValue(plan.getCitizenName());
			dataRow.createCell(2).setCellValue(plan.getPlanName());
			dataRow.createCell(3).setCellValue(plan.getPlanStatus());
			dataRow.createCell(4).setCellValue(plan.getPlanStartDate());
			dataRow.createCell(5).setCellValue(plan.getPlanEndDate());
			dataRow.createCell(6).setCellValue(plan.getBenefitAmount());
			dataRowIndex++;
		}
		
		FileOutputStream fileOutputStream=new FileOutputStream(new File("plans.xls"));
		
		return false;
	}

	@Override
	public boolean exportPdf() {
		// TODO Auto-generated method stub
		return false;
	}

}

